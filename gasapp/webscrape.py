import sys #to read command line args
# sys.path.append('/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages')
import webbrowser #to open webbrowser
import pyperclip #for being able to use data in the clipboard
import requests #
import bs4 #beautifulsoup4 - HTML parser python
from bs4 import BeautifulSoup
from selenium import webdriver

 #to get the HTML that conatains excecuted JavaScript - the InspectElement vs ViewPageSource

base_url = 'https://www.google.com/maps/dir/'

class WebScraper:

    def __init__(self, start, end):
        self.start = start
        self.end = end

    def get_HTML(self): #returns the HTML of the web page so it can be parsed
        specific_url = base_url + self.start + "/" + self.end
        chromedriver_PATH = '/Users/Jakob/Desktop/Personal/CS/chromedriver'
        driver = webdriver.Chrome(chromedriver_PATH)
        # url = 'https://www.google.com/maps/dir/Willis+Tower+Skydeck,+233+S+Wacker+Dr,+Chicago,+IL+60606/Griffith+Observatory,+2800+E+Observatory+Rd,+Los+Angeles,+CA+90027/@36.6162744,-121.0097401,4z/data=!3m1!4b1!4m13!4m12!1m5!1m1!1s0x880e2cbf1d3c61a7:0xcee917a8ddbc62f1!2m2!1d-87.635915!2d41.8788761!1m5!1m1!1s0x80c2bf61e9d408cb:0x73ff07b1c2d6dadc!2m2!1d-118.3003935!2d34.1184341'
        driver.get(specific_url)
        exc_js_html = driver.page_source

        return HTML_parser(exc_js_html) #gets final DOM: JavaScript has actually been excecuted (thank the lord)



def HTML_parser(html):
    noTomatoSoup = bs4.BeautifulSoup(html, 'html.parser')
    div_list = noTomatoSoup.find_all("div")
    tester_element = div_list[0]

    filtered_list = []
    for item in div_list:

        if len(item.contents) == 1 and type(item.contents[0]) == bs4.element.NavigableString and "miles" in item.contents[0]:

                filtered_list.append(item)
                mile_list = [item.contents[0] for item in filtered_list] #list of navigable strings that are the miles ie: 34.4 miles

    return mile_list[0]








# def driver():
#     address_tup = get_user_info()
#     google_maps(address_tup[0], address_tup[1])
#     html = get_HTML(address_tup[0], address_tup[1])
#     soup = HTML_parser(html)
#     print(soup)



# driver()






































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































